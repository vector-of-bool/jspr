{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$comment": "This schema defines the format of the test case files.",
    "$defs": {
        "expr": {
            "description": "An basic jspr expression",
            "oneOf": [
                {
                    "type": "number"
                },
                {
                    "type": "string"
                },
                {
                    "type": "boolean"
                },
                {
                    "type": "null"
                },
                {
                    "$comment": "Match an empty array separately",
                    "type": "array",
                    "maxItems": 0
                },
                {
                    "$comment": "A 'let' invocation",
                    "$ref": "#/$defs/varset"
                },
                {
                    "$comment": "A [foo: bar] style function application",
                    "$ref": "#/$defs/keywordCall"
                },
                {
                    "$comment": "A [foo, bar] style function application",
                    "$ref": "#/$defs/listCall"
                },
                {
                    "$comment": "A function application using a single-item map with a leading hyphen key",
                    "$ref": "#/$defs/mapCall"
                },
                {
                    "$ref": "#/$defs/specialFormsPositional"
                }
            ]
        },
        "mapCall": {
            "type": "object",
            "description": "A function application using a single-item map with a leading hyphen key",
            "maxProperties": 1,
            "additionalProperties": false,
            "patternProperties": {
                "^-.*:$": {
                    "ref": "#/$defs/bareMap"
                },
                "^-.*[`-]$": {
                    "ref": "#/$defs/exprSequence"
                },
                "^-.*[^'`:-]$": {
                    "ref": "#/$defs/expr"
                },
                "^-.*'$": {}
            }
        },
        "bareMap": {
            "type": "object",
            "description": "A raw map value",
            "patternProperties": {
                "'$": {},
                "[`-]$": {
                    "$ref": "#/$defs/exprSequence"
                },
                ":$": {
                    "$ref": "#/$defs/bareMap"
                },
                "$": {
                    "$ref": "#/$defs/expr"
                }
            }
        },
        "specialFormsPositional": {
            "oneOf": [
                {
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 3,
                    "description": "Variable assignment",
                    "items": [
                        {
                            "const": "let"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/$defs/expr"
                        }
                    ]
                },
                {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "description": "Quoted expression",
                    "items": [
                        {
                            "const": "quote"
                        },
                        {}
                    ]
                }
            ]
        },
        "listCall": {
            "type": "array",
            "minItems": 1,
            "items": [
                {
                    "not": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "let",
                                    "quote"
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        "keywordCall": {
            "type": "array",
            "minItems": 1,
            "items": [
                {
                    "$ref": "#/$defs/keywordCallFirst"
                }
            ],
            "additionalItems": {
                "$ref": "#/$defs/keywordCallArg"
            }
        },
        "keywordCallFirst": {
            "type": "object",
            "minProperties": 1,
            "maxProperties": 1,
            "additionalProperties": false,
            "patternProperties": {
                "'$": {},
                "[`-]$": {
                    "$ref": "#/$defs/exprSequence"
                },
                ":$": {
                    "$ref": "#/$defs/bareMap"
                },
                "\\w$": {
                    "$ref": "#/$defs/expr"
                }
            }
        },
        "keywordCallArg": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "'$": {},
                "[`-]$": {
                    "$ref": "#/$defs/exprSequence"
                },
                ":$": {
                    "$ref": "#/$defs/bareMap"
                },
                "\\w$": {
                    "$ref": "#/$defs/expr"
                }
            }
        },
        "varset": {
            "type": "object",
            "additionalProperties": false,
            "maxProperties": 1,
            "patternProperties": {
                ".+=$": {
                    "$ref": "#/$defs/expr"
                },
                ".+=[`-]$": {
                    "$ref": "#/$defs/exprSequence"
                },
                ".+='$": {}
            }
        },
        "exprSequence": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/expr"
            }
        },
        "rootCode": {
            "description": "Code to validate",
            "$ref": "#/$defs/exprSequence"
        },
        "case": {
            "oneOf": [
                {
                    "type": "object",
                    "required": [
                        "code",
                        "rescue",
                        "what"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "env": {
                            "type": "object",
                            "description": "Values to insert into the environment"
                        },
                        "what": {
                            "type": "string",
                            "description": "Describe the purpose of this test case"
                        },
                        "code": {
                            "$ref": "#/$defs/rootCode"
                        },
                        "rescue": {
                            "description": "Value to expect to appear in the exception"
                        }
                    }
                },
                {
                    "type": "object",
                    "required": [
                        "code",
                        "expect",
                        "what"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "env": {
                            "type": "object",
                            "description": "Values to insert into the environment"
                        },
                        "what": {
                            "type": "string",
                            "description": "Describe the purpose of this test case"
                        },
                        "code": {
                            "$ref": "#/$defs/rootCode"
                        },
                        "expect": {
                            "description": "Expected result of evaluating the code"
                        }
                    }
                }
            ]
        }
    },
    "type": "object",
    "required": [
        "cases"
    ],
    "additionalProperties": false,
    "properties": {
        "cases": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/case"
            }
        }
    }
}